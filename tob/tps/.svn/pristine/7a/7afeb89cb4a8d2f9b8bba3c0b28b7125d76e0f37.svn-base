Date de l'évaluation : jeu. 25 févr. 2021 21:46:50 CET

!!! Il est interdit de changer Jeu.java (voir evaluations/evaluation1/Jeu.java.diff)

Nombre de similitudes (voir evaluations/evaluation1/sim_java.txt) : 2
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 34/14	(voir evaluations/evaluation1//checkstyle.log)

Utilisation de 'Scanner' : ok
	allumettes/Humain.java:    private static final Scanner scanner = new Scanner(System.in);
	allumettes/Humain.java:     * @see Scanner

Utilisation de 'split' : ok
	allumettes/Jouer.java:					String[] parts = arg.split("@");

Utilisation de 'Random' : ok
	allumettes/Naif.java:     * @see java.util.Random
	allumettes/Naif.java:        java.util.Random random = new java.util.Random();

Utilisation de '3' : Ne pas utiliser de constante littérale hors -1, 0 ou 1 (peut-être PRISE_MAX ?)
	allumettes/JeuReel.java: * de rôle, prennent 1, 2 ou 3 allumettes d’un tas qui en
	allumettes/Tricheur.java:            case 3: return 2;

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.
Compilation de HumainTest.java : OK.
Compilation de JoueurTest.java : OK.
Compilation de TricheurTest.java : OK.
Compilation de NaifTest.java : OK.
Compilation de RapideTest.java : OK.
Compilation de JeuReelTest.java : OK.
Compilation de JeuProcurationTest.java : OK.
Test exemplePresqueSujet : ok
Test exempleTricheurSujet : ok
Test exempleConfiantTricheurSujet : ok
Test exempleRobustesse : NON CONFORME (voir evaluations/evaluation1/exempleRobustesse.diff)
Test exempleHumainTricheurExpert : NON CONFORME (voir evaluations/evaluation1/exempleHumainTricheurExpert.diff)
Test exempleLucLea : ok
Test exempleRapideRapide : NON CONFORME (voir evaluations/evaluation1/exempleRapideRapide.diff)
Test exempleTricheurExpert : NON CONFORME (voir evaluations/evaluation1/exempleTricheurExpert.diff)

On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : Tests run: 2,  Failures: 1	(voir evaluations/evaluation1/FormeTest.log)
    1) testerRespectArchitecture(FormeTest)
        AssertionError: La méthode devrait être publique : int allumettes.Joueur.getPrise(allumettes.Jeu) throws allumettes.CoupInvalideException


Compilation de HumainTest.java : OK.
Test allumettes.HumainTest : OK (2 tests)	(voir evaluations/evaluation1/allumettes.HumainTest.log)
Compilation de JoueurTest.java : OK.
Test allumettes.JoueurTest : OK (4 tests)	(voir evaluations/evaluation1/allumettes.JoueurTest.log)
Compilation de TricheurTest.java : OK.
Test allumettes.TricheurTest : OK (2 tests)	(voir evaluations/evaluation1/allumettes.TricheurTest.log)
Compilation de NaifTest.java : OK.
Test allumettes.NaifTest : OK (3 tests)	(voir evaluations/evaluation1/allumettes.NaifTest.log)
Compilation de RapideTest.java : OK.
Test allumettes.RapideTest : OK (4 tests)	(voir evaluations/evaluation1/allumettes.RapideTest.log)
Compilation de JeuReelTest.java : OK.
Test allumettes.JeuReelTest : OK (7 tests)	(voir evaluations/evaluation1/allumettes.JeuReelTest.log)
Compilation de JeuProcurationTest.java : OK.
Test allumettes.JeuProcurationTest : OK (5 tests)	(voir evaluations/evaluation1/allumettes.JeuProcurationTest.log)
