module ual(a[31..0], b[31..0], cmd[3..0] : s[31..0], N, Z, V, C)
	// addition/soustraction si code 0....
   addsub = /cmd[1]*/cmd[2]*/cmd[3] // addsub si 000. AJOUT
   sub = cmd[0] // sub si 0001 add si 0000
   sigextend = /cmd[0]*/cmd[1]*cmd[2]*cmd[3] //sigextend ssi 1100
   
   //addsub
   addsub32(a[31..0], b[31..0], sub : saddsub[31..0], V, C)
   
   //sig_extend
   sig_extend24(a[23..0] : sextend[31..0])
   
   //
   s[31..0] = addsub*saddsub[31..0] + sigextend*sextend[31..0]
   N = s[31]
   Z = /s[0]*/s[1]*/s[2]*/s[3]*/s[4]*/s[5]*/s[6]*/s[7]*/s[8]*/s[9]*/s[10]*/s[11]*/s[12]*/s[13]*/s[14]*/s[15]*/s[16]*/s[17]*/s[18]*/s[19]*/s[20]*/s[21]*/s[22]*/s[23]*/s[24]*/s[25]*/s[26]*/s[27]*/s[28]*/s[29]*/s[30]*/s[31]
   
end module